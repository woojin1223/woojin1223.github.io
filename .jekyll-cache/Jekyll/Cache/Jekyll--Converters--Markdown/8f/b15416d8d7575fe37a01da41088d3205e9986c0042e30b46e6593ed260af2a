I"31<h2 id="문제-설명">문제 설명</h2>

<p>IT 벤처 회사를 운영하고 있는 라이언은 매년 사내 해커톤 대회를 개최하여 우승자에게 상금을 지급하고 있습니다.<br />
이번 대회에서는 우승자에게 지급되는 상금을 이전 대회와는 다르게 다음과 같은 방식으로 결정하려고 합니다.<br />
해커톤 대회에 참가하는 모든 참가자들에게는 숫자들과 3가지의 연산문자(<code class="language-html highlighter-rouge">+, -, *</code>) 만으로 이루어진 연산 수식이 전달되며, 참가자의 미션은 전달받은 수식에 포함된 연산자의 우선순위를 자유롭게 재정의하여 만들 수 있는 가장 큰 숫자를 제출하는 것입니다.<br />
단, 연산자의 우선순위를 새로 정의할 때, 같은 순위의 연산자는 없어야 합니다.<br />
즉, <code class="language-html highlighter-rouge">+</code> &gt; <code class="language-html highlighter-rouge">-</code> &gt; <code class="language-html highlighter-rouge">*</code> 또는 <code class="language-html highlighter-rouge">-</code> &gt; <code class="language-html highlighter-rouge">*</code> &gt; <code class="language-html highlighter-rouge">+</code> 등과 같이 연산자 우선순위를 정의할 수 있으나 <code class="language-html highlighter-rouge">+,*</code> &gt; <code class="language-html highlighter-rouge">-</code> 또는 <code class="language-html highlighter-rouge">*</code> &gt; <code class="language-html highlighter-rouge">+,-</code>처럼 2개 이상의 연산자가 동일한 순위를 가지도록 연산자 우선순위를 정의할 수는 없습니다.<br />
수식에 포함된 연산자가 2개라면 정의할 수 있는 연산자 우선순위 조합은 2! = 2가지이며, 연산자가 3개라면 3! = 6가지 조합이 가능합니다.<br />
만약 계산된 결과가 음수라면 해당 숫자의 <strong>절댓값</strong>으로 변환하여 제출하며 제출한 숫자가 가장 큰 참가자를 우승자로 선정하며, 우승자가 제출한 숫자를 우승상금으로 지급하게 됩니다.</p>

<p>예를 들어, 참가자 중 네오가 아래와 같은 수식을 전달받았다고 가정합니다.</p>

<p><code class="language-html highlighter-rouge">"100-200*300-500+20"</code></p>

<p>일반적으로 수학 및 전산학에서 약속된 연산자 우선순위에 따르면 더하기와 빼기는 서로 동등하며 곱하기는 더하기, 빼기에 비해 우선순위가 높아 <code class="language-html highlighter-rouge">*</code> &gt; <code class="language-html highlighter-rouge">+,-</code> 로 우선순위가 정의되어 있습니다.<br />
대회 규칙에 따라 <code class="language-html highlighter-rouge">+</code> &gt; <code class="language-html highlighter-rouge">-</code> &gt; <code class="language-html highlighter-rouge">*</code> 또는 <code class="language-html highlighter-rouge">-</code> &gt; <code class="language-html highlighter-rouge">*</code> &gt; <code class="language-html highlighter-rouge">+</code> 등과 같이 연산자 우선순위를 정의할 수 있으나 <code class="language-html highlighter-rouge">+,*</code> &gt; <code class="language-html highlighter-rouge">-</code> 또는 <code class="language-html highlighter-rouge">*</code> &gt; <code class="language-html highlighter-rouge">+,-</code> 처럼 2개 이상의 연산자가 동일한 순위를 가지도록 연산자 우선순위를 정의할 수는 없습니다.<br />
수식에 연산자가 3개 주어졌으므로 가능한 연산자 우선순위 조합은 3! = 6가지이며, 그 중 <code class="language-html highlighter-rouge">+</code> &gt; <code class="language-html highlighter-rouge">-</code> &gt; <code class="language-html highlighter-rouge">*</code> 로 연산자 우선순위를 정한다면 결괏값은 22,000원이 됩니다.<br />
반면에 <code class="language-html highlighter-rouge">*</code> &gt; <code class="language-html highlighter-rouge">+</code> &gt; <code class="language-html highlighter-rouge">-</code> 로 연산자 우선순위를 정한다면 수식의 결괏값은 -60,420 이지만, 규칙에 따라 우승 시 상금은 절댓값인 60,420원이 됩니다.</p>

<p>참가자에게 주어진 연산 수식이 담긴 문자열 <code class="language-html highlighter-rouge">expression</code>이 매개변수로 주어질 때, 우승 시 받을 수 있는 가장 큰 상금 금액을 return 하도록 <code class="language-html highlighter-rouge">solution</code> 함수를 완성해주세요.</p>

<h2 id="제한-사항">제한 사항</h2>

<ul>
  <li><code class="language-html highlighter-rouge">expression</code>은 길이가 3 이상 100 이하인 문자열입니다.</li>
  <li><code class="language-html highlighter-rouge">expression</code>은 공백문자, 괄호문자 없이 오로지 숫자와 3가지의 연산자(<code class="language-html highlighter-rouge">+, -, *</code>) 만으로 이루어진 올바른 중위표기법(연산의 두 대상 사이에 연산기호를 사용하는 방식)으로 표현된 연산식입니다. 잘못된 연산식은 입력으로 주어지지 않습니다.
    <ul>
      <li>즉, <code class="language-html highlighter-rouge">"402+-561*"</code>처럼 잘못된 수식은 올바른 중위표기법이 아니므로 주어지지 않습니다.</li>
    </ul>
  </li>
  <li><code class="language-html highlighter-rouge">expression</code>의 피연산자(operand)는 0 이상 999 이하의 숫자입니다.
    <ul>
      <li>즉, <code class="language-html highlighter-rouge">"100-2145*458+12"</code>처럼 999를 초과하는 피연산자가 포함된 수식은 입력으로 주어지지 않습니다.</li>
      <li><code class="language-html highlighter-rouge">"-56+100"</code>처럼 피연산자가 음수인 수식도 입력으로 주어지지 않습니다.</li>
    </ul>
  </li>
  <li><code class="language-html highlighter-rouge">expression</code>은 적어도 1개 이상의 연산자를 포함하고 있습니다.</li>
  <li>연산자 우선순위를 어떻게 적용하더라도, <code class="language-html highlighter-rouge">expression</code>의 중간 계산값과 최종 결괏값은 절댓값이 $2^{63} - 1$ 이하가 되도록 입력이 주어집니다.</li>
  <li>같은 연산자끼리는 앞에 있는 것의 우선순위가 더 높습니다.</li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>expression</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-html highlighter-rouge">"100-200*300-500+20"</code></td>
      <td>60420</td>
    </tr>
    <tr>
      <td><code class="language-html highlighter-rouge">"50*6-3*2"</code></td>
      <td>300</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예에-대한-설명">입출력 예에 대한 설명</h2>

<h3 id="입출력-예-1">입출력 예 #1</h3>

<p><code class="language-html highlighter-rouge">*</code> &gt; <code class="language-html highlighter-rouge">+</code> &gt; <code class="language-html highlighter-rouge">-</code> 로 연산자 우선순위를 정했을 때, 가장 큰 절댓값을 얻을 수 있습니다.<br />
연산 순서는 아래와 같습니다.<br />
<code class="language-html highlighter-rouge">100-200*300-500+20</code>
= <code class="language-html highlighter-rouge">100-(200*300)-500+20</code><br />
= <code class="language-html highlighter-rouge">100-60000-(500+20)</code><br />
= <code class="language-html highlighter-rouge">(100-60000)-520</code><br />
= <code class="language-html highlighter-rouge">(-59900-520)</code><br />
= <code class="language-html highlighter-rouge">-60420</code><br />
따라서, 우승 시 받을 수 있는 상금은 |-60420| = 60420 입니다.</p>

<h3 id="입출력-예-2">입출력 예 #2</h3>

<p><code class="language-html highlighter-rouge">-</code> &gt; <code class="language-html highlighter-rouge">*</code> 로 연산자 우선순위를 정했을 때, 가장 큰 절댓값을 얻을 수 있습니다.<br />
연산 순서는 아래와 같습니다.(<code class="language-html highlighter-rouge">expression</code>에서 <code class="language-html highlighter-rouge">+</code> 연산자는 나타나지 않았으므로, 고려할 필요가 없습니다.)<br />
<code class="language-html highlighter-rouge">50*6-3*2</code>
= <code class="language-html highlighter-rouge">50*(6-3)*2</code><br />
= <code class="language-html highlighter-rouge">(50*3)*2</code><br />
= <code class="language-html highlighter-rouge">150*2</code><br />
= <code class="language-html highlighter-rouge">300</code><br />
따라서, 우승 시 받을 수 있는 상금은 300 입니다.</p>

<h2 id="풀이">풀이</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="kn">from</span> <span class="nn">copy</span> <span class="kn">import</span> <span class="n">deepcopy</span>
<span class="kn">from</span> <span class="nn">itertools</span> <span class="kn">import</span> <span class="n">permutations</span>
<span class="kn">from</span> <span class="nn">re</span> <span class="kn">import</span> <span class="n">split</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">expression</span><span class="p">):</span>
    <span class="n">exp_splited</span> <span class="o">=</span> <span class="n">split</span><span class="p">(</span><span class="s">"(\+|-|\*)"</span><span class="p">,</span> <span class="n">expression</span><span class="p">)</span>
    <span class="n">operators</span> <span class="o">=</span> <span class="p">[</span><span class="s">"+"</span><span class="p">,</span> <span class="s">"-"</span><span class="p">,</span> <span class="s">"*"</span><span class="p">]</span>
    
    <span class="n">operators</span> <span class="o">=</span> <span class="p">[</span><span class="n">oper</span> <span class="k">for</span> <span class="n">oper</span> <span class="ow">in</span> <span class="n">operators</span> <span class="k">if</span> <span class="n">oper</span> <span class="ow">in</span> <span class="n">exp_splited</span><span class="p">]</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="k">for</span> <span class="n">permutation</span> <span class="ow">in</span> <span class="n">permutations</span><span class="p">(</span><span class="n">operators</span><span class="p">):</span>
        <span class="n">exp_splited_copy</span> <span class="o">=</span> <span class="n">deepcopy</span><span class="p">(</span><span class="n">exp_splited</span><span class="p">)</span>
        
        <span class="k">for</span> <span class="n">operator</span> <span class="ow">in</span> <span class="n">permutation</span><span class="p">:</span>
            <span class="k">while</span> <span class="n">operator</span> <span class="ow">in</span> <span class="n">exp_splited_copy</span><span class="p">:</span>
                <span class="n">idx</span> <span class="o">=</span> <span class="n">exp_splited_copy</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">operator</span><span class="p">)</span>
                <span class="n">exp_splited_copy</span><span class="p">[</span><span class="n">idx</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">exp_splited_copy</span><span class="p">[</span><span class="n">idx</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">2</span><span class="p">])))]</span>
                                
        <span class="n">answer</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">exp_splited_copy</span><span class="p">[</span><span class="mi">0</span><span class="p">])))</span>
        
    <span class="k">return</span> <span class="nb">max</span><span class="p">(</span><span class="n">answer</span><span class="p">)</span>
</code></pre></div></div>
:ET