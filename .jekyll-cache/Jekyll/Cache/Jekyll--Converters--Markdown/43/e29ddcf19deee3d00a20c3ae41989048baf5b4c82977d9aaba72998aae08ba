I"$<h2 id="문제-설명">문제 설명</h2>

<p>XX 게임의 유저들이 보스 몬스터를 사냥하려고 팀을 만들었습니다.<br />
그리고 팀에 속한 캐릭터에 아이템을 사용해 공격력을 높이려 합니다.</p>

<p>이 게임의 아이템은 캐릭터의 공격력은 높이고 체력을 낮춥니다.<br />
그래서 아이템을 적절히 사용해 팀의 공격력을 최대한 끌어올리려 합니다.<br />
캐릭터별로 아이템을 사용할지 말지는 자유지만, 아이템을 사용한 캐릭터는 체력이 반드시 100 이상 남아야 합니다.<br />
또, 한 캐릭터에 아이템 하나씩만 사용할 수 있으며, 사용한 아이템은 사라집니다.</p>

<p>예를 들어 캐릭터의 체력이 <code class="language-plaintext highlighter-rouge">[200, 120, 150]</code> 이고 아이템의 효과는 다음과 같습니다.</p>

<table>
  <thead>
    <tr>
      <th>높여줄 공격치</th>
      <th>낮추는 체력</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>30</td>
      <td>100</td>
    </tr>
    <tr>
      <td>500</td>
      <td>30</td>
    </tr>
    <tr>
      <td>100</td>
      <td>400</td>
    </tr>
  </tbody>
</table>

<p>이때 팀의 공격력을 최대로 올리려면 첫 번째 캐릭터에 첫 번째 아이템을, 세 번째 캐릭터에 두 번째 아이템을 사용하면 됩니다.</p>

<p>캐릭터들의 체력을 담은 배열 <code class="language-plaintext highlighter-rouge">healths</code> 와 아이템별 효과를 담은 이차원 배열 <code class="language-plaintext highlighter-rouge">items</code> 가 <code class="language-plaintext highlighter-rouge">solution</code> 함수의 매개변수로 주어질 때, <strong>팀의 공격력을 최고로 끌어올리려면 어떤 아이템을 사용해야 하는지</strong> return 하도록 <code class="language-plaintext highlighter-rouge">solution</code> 함수를 완성해주세요.</p>

<h2 id="제한사항">제한사항</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">healths</code> 의 길이는 1 이상 10,000 이하입니다.</li>
  <li><code class="language-plaintext highlighter-rouge">healths</code> 의 원소(캐릭터의 체력)는 1 이상 1,000,000 이하인 자연수입니다.</li>
  <li><code class="language-plaintext highlighter-rouge">items</code> 의 길이는 1 이상 5,000 이하입니다.</li>
  <li><code class="language-plaintext highlighter-rouge">items</code> 에는 아이템이 [올려줄 공격력, 낮출 체력]이 번호 순서대로 들어있습니다.
    <ul>
      <li>아이템 번호는 1번 부터 시작합니다.</li>
      <li><code class="language-plaintext highlighter-rouge">items[i]</code> 에는 i + 1번 아이템이 [올려줄 공격력, 낮출 체력]이 들어있습니다.</li>
      <li>아이템이 올리는 공격력은 1 이상 500,000 이하인 자연수입니다.</li>
      <li>아이템이 내리는 체력은 1 이상 500,000 이하인 자연수입니다.</li>
    </ul>
  </li>
  <li>아이템 번호는 오름차순으로 정렬해 return 해주세요.</li>
  <li><strong>올려주는 공격력이 같은 아이템은 없습니다.</strong></li>
  <li><strong>아이템을 사용하는 방법이 여러 가지라면, 그러한 방법 중 아무거나 하나를 return 해주세요. 단, 아이템 번호는 오름차순으로 정렬되어 있어야 합니다.</strong></li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>healths</th>
      <th>items</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">[200, 120, 150]</code></td>
      <td><code class="language-plaintext highlighter-rouge">[[30, 100], [500, 30], [100, 400]]</code></td>
      <td><code class="language-plaintext highlighter-rouge">[1, 2]</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">[300, 200, 500]</code></td>
      <td><code class="language-plaintext highlighter-rouge">[[1000, 600], [400, 500], [300, 100]]</code></td>
      <td><code class="language-plaintext highlighter-rouge">[3]</code></td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예에-대한-설명">입출력 예에 대한 설명</h2>

<ul>
  <li>입출력 예 #1</li>
</ul>

<p>문제의 예시와 같습니다.</p>

<ul>
  <li>입출력 예 #2</li>
</ul>

<p>첫 번째, 두 번째 아이템을 사용하면 캐릭터의 체력이 100 미만이 됩니다.<br />
따라서 세 번째 아이템만 사용할 수 있습니다.</p>

<h2 id="풀이">풀이</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">heapq</span> <span class="kn">import</span> <span class="n">heappop</span><span class="p">,</span> <span class="n">heappush</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">healths</span><span class="p">,</span> <span class="n">items</span><span class="p">):</span>
    <span class="s">"""
    [구현 원리]
    캐릭터의 체력이 낮을수록 사용할 수 있는 아이템의 개수가 적으므로
    체력이 낮은 캐릭터가 아이템을 먼저 사용할 수 있게 한다.
    그리고 사용할 수 있는 아이템이 여러 개라면 공격력이 가장 높은 아이템을 사용하게 한다. 
    """</span>

    <span class="s">"""
    [코드 설명]
    1. 캐릭터를 체력이 낮은 순으로 정렬한다.
    2. 아이템을 체력이 높은 순으로 정렬한다. (pop()을 사용하여 낮은 순으로 뽑기 위해)
    """</span>
    <span class="n">healths</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>
    <span class="n">items</span> <span class="o">=</span> <span class="p">[(</span><span class="o">*</span><span class="n">item</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">item</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">items</span><span class="p">,</span> <span class="mi">1</span><span class="p">)]</span>
    <span class="n">items</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
    <span class="n">candidate_items</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 캐릭터에 사용할 수 있는 후보 아이템
</span>    <span class="n">used_items</span> <span class="o">=</span> <span class="p">[]</span>      <span class="c1"># candidate_items에서 캐릭터에 사용된 아이템
</span>
    <span class="s">"""
    [코드 설명]
    3. 체력이 낮은 캐릭터 순으로, 각 캐릭터에 사용할 수 있는 후보 아이템들을
    공격력이 높은 순으로 candidate_items에 저장한다.
    4. candidate_items에서 캐릭터당 하나만 꺼낸다.
    """</span>
    <span class="k">for</span> <span class="n">health</span> <span class="ow">in</span> <span class="n">healths</span><span class="p">:</span>

        <span class="k">while</span> <span class="n">items</span> <span class="ow">and</span> <span class="n">health</span> <span class="o">-</span> <span class="n">items</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="p">:</span>
            <span class="n">item</span> <span class="o">=</span> <span class="n">items</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
            <span class="n">heappush</span><span class="p">(</span><span class="n">candidate_items</span><span class="p">,</span> <span class="p">(</span><span class="o">-</span><span class="n">item</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">item</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span> <span class="c1"># heappush()를 이용해 공격력이 높은 순으로 아이템 저장
</span>
        <span class="k">if</span> <span class="n">candidate_items</span><span class="p">:</span>
            <span class="n">used_items</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">heappop</span><span class="p">(</span><span class="n">candidate_items</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span> <span class="c1"># 사용된 아이템의 번호
</span>
    <span class="n">used_items</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>

    <span class="k">return</span> <span class="n">used_items</span> 
</code></pre></div></div>
:ET