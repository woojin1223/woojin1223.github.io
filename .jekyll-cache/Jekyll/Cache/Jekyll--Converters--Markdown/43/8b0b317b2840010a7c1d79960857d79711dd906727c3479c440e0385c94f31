I"<h2 id="문제-설명">문제 설명</h2>

<p>2차원 행렬 <code class="language-html highlighter-rouge">arr1</code>과 <code class="language-html highlighter-rouge">arr2</code>를 입력받아, <code class="language-html highlighter-rouge">arr1</code>에 <code class="language-html highlighter-rouge">arr2</code>를 곱한 결과를 반환하는 함수, <code class="language-html highlighter-rouge">solution</code>을 완성해주세요.</p>

<h2 id="제한사항">제한사항</h2>

<ul>
  <li>행렬 <code class="language-html highlighter-rouge">arr1</code>, <code class="language-html highlighter-rouge">arr2</code>의 행과 열의 길이는 2 이상 100 이하입니다.</li>
  <li>행렬 <code class="language-html highlighter-rouge">arr1</code>, <code class="language-html highlighter-rouge">arr2</code>의 원소는 -10 이상 20 이하인 자연수입니다.</li>
  <li>곱할 수 있는 배열만 주어집니다.</li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>arr1</th>
      <th>arr2</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-html highlighter-rouge">[[1, 4], [3, 2], [4, 1]]</code></td>
      <td><code class="language-html highlighter-rouge">[[3, 3], [3, 3]]</code></td>
      <td><code class="language-html highlighter-rouge">[[15, 15], [15, 15], [15, 15]]</code></td>
    </tr>
    <tr>
      <td><code class="language-html highlighter-rouge">[[2, 3, 2], [4, 2, 4], [3, 1, 4]]</code></td>
      <td><code class="language-html highlighter-rouge">[[5, 4, 3], [2, 4, 1], [3, 1, 1]]</code></td>
      <td><code class="language-html highlighter-rouge">[[22, 22, 11], [36, 28, 18], [29, 20, 14]]</code></td>
    </tr>
  </tbody>
</table>

<h2 id="풀이">풀이</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">arr1</span><span class="p">,</span> <span class="n">arr2</span><span class="p">):</span>
    <span class="n">m</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">arr1</span><span class="p">)</span>
    <span class="n">n</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">arr2</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">n</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">)]</span>
    
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>     
            <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">x</span> <span class="o">*</span> <span class="n">y</span> <span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">arr1</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="nb">list</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="n">arr2</span><span class="p">))[</span><span class="n">j</span><span class="p">]))</span>
            
    <span class="k">return</span> <span class="n">result</span>
</code></pre></div></div>
:ET