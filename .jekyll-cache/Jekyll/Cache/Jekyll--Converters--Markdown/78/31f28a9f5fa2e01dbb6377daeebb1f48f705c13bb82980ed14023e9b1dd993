I"H,<h2 id="문제-설명">문제 설명</h2>

<p>레스토랑을 운영하던 스카피는 코로나19로 인한 불경기를 극복하고자 메뉴를 새로 구성하려고 고민하고 있습니다.<br />
기존에는 단품으로만 제공하던 메뉴를 조합해서 코스요리 형태로 재구성해서 새로운 메뉴를 제공하기로 결정했습니다.<br />
어떤 단품메뉴들을 조합해서 코스요리 메뉴로 구성하면 좋을 지 고민하던 “스카피”는 이전에 각 손님들이 주문할 때 가장 많이 함께 주문한 단품메뉴들을 코스요리 메뉴로 구성하기로 했습니다.<br />
단, 코스요리 메뉴는 최소 2가지 이상의 단품메뉴로 구성하려고 합니다.<br />
또한, 최소 2명 이상의 손님으로부터 주문된 단품메뉴 조합에 대해서만 코스요리 메뉴 후보에 포함하기로 했습니다.</p>

<p>예를 들어, 손님 6명이 주문한 단품메뉴들의 조합이 다음과 같다면,
(각 손님은 단품메뉴를 2개 이상 주문해야 하며, 각 단품메뉴는 A ~ Z의 알파벳 대문자로 표기합니다.)</p>

<table>
  <thead>
    <tr>
      <th>손님 번호</th>
      <th>주문한 단품메뉴 조합</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1번 손님</td>
      <td>A, B, C, F, G</td>
    </tr>
    <tr>
      <td>2번 손님</td>
      <td>A, C</td>
    </tr>
    <tr>
      <td>3번 손님</td>
      <td>C, D, E</td>
    </tr>
    <tr>
      <td>4번 손님</td>
      <td>A, C, D, E</td>
    </tr>
    <tr>
      <td>5번 손님</td>
      <td>B, C, F, G</td>
    </tr>
    <tr>
      <td>6번 손님</td>
      <td>A, C, D, E, H</td>
    </tr>
  </tbody>
</table>

<p>가장 많이 함께 주문된 단품메뉴 조합에 따라 “스카피”가 만들게 될 코스요리 메뉴 구성 후보는 다음과 같습니다.</p>

<table>
  <thead>
    <tr>
      <th>코스 종류</th>
      <th>메뉴 구성</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>요리 2개 코스</td>
      <td>A, C</td>
      <td>1번, 2번, 4번, 6번 손님으로부터 총 4번 주문됐습니다.</td>
    </tr>
    <tr>
      <td>요리 3개 코스</td>
      <td>C, D, E</td>
      <td>3번, 4번, 6번 손님으로부터 총 3번 주문됐습니다.</td>
    </tr>
    <tr>
      <td>요리 4개 코스</td>
      <td>B, C, F, G</td>
      <td>1번, 5번 손님으로부터 총 2번 주문됐습니다.</td>
    </tr>
    <tr>
      <td>요리 4개 코스</td>
      <td>A, C, D, E</td>
      <td>4번, 6번 손님으로부터 총 2번 주문됐습니다.</td>
    </tr>
  </tbody>
</table>

<h2 id="문제">문제</h2>

<p>각 손님들이 주문한 단품메뉴들이 문자열 형식으로 담긴 배열 <code class="language-html highlighter-rouge">orders</code>, “스카피”가 <strong>추가하고 싶어하는</strong> 코스요리를 구성하는 단품메뉴들의 갯수가 담긴 배열 <code class="language-html highlighter-rouge">course</code>가 매개변수로 주어질 때, “스카피”가 새로 추가하게 될 코스요리의 메뉴 구성을 문자열 형태로 배열에 담아 return 하도록 <code class="language-html highlighter-rouge">solution</code> 함수를 완성해 주세요.</p>

<h2 id="제한사항">제한사항</h2>

<ul>
  <li><code class="language-html highlighter-rouge">orders</code> 배열의 크기는 2 이상 20 이하입니다.</li>
  <li><code class="language-html highlighter-rouge">orders</code> 배열의 각 원소는 크기가 2 이상 10 이하인 문자열입니다.
    <ul>
      <li>각 문자열은 알파벳 대문자로만 이루어져 있습니다.</li>
      <li>각 문자열에는 같은 알파벳이 중복해서 들어있지 않습니다.</li>
    </ul>
  </li>
  <li><code class="language-html highlighter-rouge">course</code> 배열의 크기는 1 이상 10 이하입니다.
    <ul>
      <li><code class="language-html highlighter-rouge">course</code> 배열의 각 원소는 2 이상 10 이하인 자연수가 <strong>오름차순</strong>으로 정렬되어 있습니다.</li>
      <li><code class="language-html highlighter-rouge">course</code> 배열에는 같은 값이 중복해서 들어있지 않습니다.</li>
    </ul>
  </li>
  <li>정답은 각 코스요리 메뉴의 구성을 문자열 형식으로 배열에 담아 사전 순으로 <strong>오름차순</strong> 정렬해서 return 해주세요.
    <ul>
      <li>배열의 각 원소에 저장된 문자열 또한 알파벳 <strong>오름차순</strong>으로 정렬되어야 합니다.</li>
      <li>만약 가장 많이 함께 주문된 메뉴 구성이 여러 개라면, 모두 배열에 담아 return 하면 됩니다.</li>
      <li><code class="language-html highlighter-rouge">orders</code>와 <code class="language-html highlighter-rouge">course</code> 매개변수는 return 하는 배열의 길이가 1 이상이 되도록 주어집니다.</li>
    </ul>
  </li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>orders</th>
      <th>course</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[“ABCFG”, “AC”, “CDE”, “ACDE”, “BCFG”, “ACDEH”]</td>
      <td>[2, 3, 4]</td>
      <td>[“AC”, “ACDE”, “BCFG”, “CDE”]</td>
    </tr>
    <tr>
      <td>[“ABCDE”, “AB”, “CD”, “ADE”, “XYZ”, “XYZ”, “ACD”]</td>
      <td>[2, 3, 5]</td>
      <td>[“ACD”, “AD”, “ADE”, “CD”, “XYZ”]</td>
    </tr>
    <tr>
      <td>[“XYZ”, “XWY”, “WXA”]</td>
      <td>[2, 3, 4]</td>
      <td>[“WX”, “XY”]</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>

<ul>
  <li>입출력 예 #1</li>
</ul>

<p>문제의 예시와 같습니다.</p>

<ul>
  <li>입출력 예 #2</li>
</ul>

<p>AD가 세 번, CD가 세 번, ACD가 두 번, ADE가 두 번, XYZ 가 두 번 주문됐습니다.<br />
요리 5개를 주문한 손님이 1명 있지만, 최소 2명 이상의 손님에게서 주문된 구성만 코스요리 후보에 들어가므로, 요리 5개로 구성된 코스요리는 새로 추가하지 않습니다.</p>

<ul>
  <li>입출력 예 #3</li>
</ul>

<p>WX가 두 번, XY가 두 번 주문됐습니다.<br />
3명의 손님 모두 단품메뉴를 3개씩 주문했지만, 최소 2명 이상의 손님에게서 주문된 구성만 코스요리 후보에 들어가므로, 요리 3개로 구성된 코스요리는 새로 추가하지 않습니다.<br />
또, 단품메뉴를 4개 이상 주문한 손님은 없으므로, 요리 4개로 구성된 코스요리 또한 새로 추가하지 않습니다.</p>

<h2 id="풀이">풀이</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">Counter</span><span class="p">,</span> <span class="n">defaultdict</span>
<span class="kn">from</span> <span class="nn">itertools</span> <span class="kn">import</span> <span class="n">chain</span><span class="p">,</span> <span class="n">combinations</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">orders</span><span class="p">,</span> <span class="n">course</span><span class="p">):</span>
    <span class="n">combs</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="k">for</span> <span class="n">order</span> <span class="ow">in</span> <span class="n">orders</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">course</span> <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="nb">len</span><span class="p">(</span><span class="n">order</span><span class="p">)]:</span>
            <span class="n">combs</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">combinations</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="n">order</span><span class="p">),</span> <span class="n">i</span><span class="p">)))</span>
    
    <span class="n">combs</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">chain</span><span class="p">(</span><span class="o">*</span><span class="n">combs</span><span class="p">))</span>
    <span class="n">combs_counter</span> <span class="o">=</span> <span class="n">Counter</span><span class="p">(</span><span class="n">combs</span><span class="p">)</span>
    <span class="n">result_dict</span> <span class="o">=</span> <span class="n">defaultdict</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
    
    <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">combs_counter</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
        <span class="k">if</span> <span class="n">value</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">result_dict</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">key</span><span class="p">)].</span><span class="n">append</span><span class="p">([</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">])</span>
    
    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">result_dict</span><span class="p">.</span><span class="n">values</span><span class="p">():</span>
        <span class="n">max_pair</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
        <span class="n">result</span><span class="p">.</span><span class="n">extend</span><span class="p">([</span><span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">value</span> <span class="k">if</span> <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">max_pair</span><span class="p">[</span><span class="mi">1</span><span class="p">]])</span>
        
    <span class="k">return</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>
:ET