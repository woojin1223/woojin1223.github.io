I"+<h2 id="문제-링크">문제 링크</h2>

<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12900">https://programmers.co.kr/learn/courses/30/lessons/12900</a></p>

<h2 id="문제-설명">문제 설명</h2>

<p>가로 길이가 2이고 세로의 길이가 1인 직사각형모양의 타일이 있습니다.<br />
이 직사각형 타일을 이용하여 세로의 길이가 2이고 가로의 길이가 <code class="language-html highlighter-rouge">n</code>인 바닥을 가득 채우려고 합니다.<br />
타일을 채울 때는 다음과 같이 2가지 방법이 있습니다.</p>

<ul>
  <li>타일을 가로로 배치 하는 경우</li>
  <li>타일을 세로로 배치 하는 경우</li>
</ul>

<p>예를 들어서 n이 7인 직사각형은 다음과 같이 채울 수 있습니다.</p>

<p><img src="https://i.imgur.com/29ANX0f.png" alt="그림1" /></p>

<p>직사각형의 가로의 길이 <code class="language-html highlighter-rouge">n</code>이 매개변수로 주어질 때, 이 직사각형을 채우는 방법의 수를 return 하는 <code class="language-html highlighter-rouge">solution</code> 함수를 완성해주세요.</p>

<h2 id="제한사항">제한사항</h2>

<ul>
  <li>가로의 길이 <code class="language-html highlighter-rouge">n</code>은 60,000이하의 자연수입니다.</li>
  <li>경우의 수가 많아 질 수 있으므로, 경우의 수를 1,000,000,007으로 나눈 나머지를 return 해주세요.</li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>n</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>4</td>
      <td>5</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>

<p>다음과 같이 5가지 방법이 있다.</p>

<p><img src="https://i.imgur.com/keiKrD3.png" alt="그림2" /><br />
<img src="https://i.imgur.com/O9GdTE0.png" alt="그림3" /><br />
<img src="https://i.imgur.com/IZBmc6M.png" alt="그림4" /><br />
<img src="https://i.imgur.com/29LWVzK.png" alt="그림5" /><br />
<img src="https://i.imgur.com/z64JbNf.png" alt="그림6" /></p>

<h2 id="풀이">풀이</h2>

<p>수열 $a_n$을 가로의 길이가 $n$인 직사각형을 채우는 방법의 수라고 하자.<br />
그러면 다음과 같은 점화식이 성립한다.<br />
$a_{n+2} = a_n + a_{n+1}, \ n \geq 1$<br />
위 점화식은 파이썬의 <strong>multiple assignment</strong> 기능을 이용하면 쉽게 구현할 수 있다.<br />
이렇게 하면 dp 테이블을 만들지 않아도 돼서 메모리를 절약할 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">n</span>
    
    <span class="n">t1</span><span class="p">,</span> <span class="n">t2</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
    
    <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
        <span class="n">t1</span><span class="p">,</span> <span class="n">t2</span> <span class="o">=</span> <span class="n">t2</span><span class="p">,</span> <span class="n">t1</span> <span class="o">+</span> <span class="n">t2</span> <span class="c1"># multiple assignment
</span>    
    <span class="k">return</span> <span class="n">t1</span> <span class="o">%</span> <span class="mi">1000000007</span>
</code></pre></div></div>
:ET