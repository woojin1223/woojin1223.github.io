I"x<h2 id="문제-설명">문제 설명</h2>

<p>직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 구하려고 합니다.<br />
점 3개의 좌표가 들어있는 배열 <code class="language-html highlighter-rouge">v</code> 가 매개변수로 주어질 때, 직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 return 하도록 <code class="language-html highlighter-rouge">solution</code> 함수를 완성해주세요.<br />
단, 직사각형의 각 변은 x축, y축에 평행하며, 반드시 직사각형을 만들 수 있는 경우만 입력으로 주어집니다.</p>

<h2 id="제한사항">제한사항</h2>

<ul>
  <li><code class="language-html highlighter-rouge">v</code> 는 세 점의 좌표가 들어있는 2차원 배열입니다.</li>
  <li><code class="language-html highlighter-rouge">v</code> 의 각 원소는 점의 좌표를 나타내며, 좌표는 <code class="language-html highlighter-rouge">[x축 좌표, y축 좌표]</code> 순으로 주어집니다.</li>
  <li>좌표값은 1 이상 10억 이하의 자연수입니다.</li>
  <li>직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 <code class="language-html highlighter-rouge">[x축 좌표, y축 좌표]</code> 순으로 담아 return 해주세요.</li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>v</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-html highlighter-rouge">[[1, 4], [3, 4], [3, 10]]</code></td>
      <td><code class="language-html highlighter-rouge">[1, 10]</code></td>
    </tr>
    <tr>
      <td><code class="language-html highlighter-rouge">[[1, 1], [2, 2], [1, 2]]</code></td>
      <td><code class="language-html highlighter-rouge">[2, 1]</code></td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>

<ul>
  <li>입출력 예 #1</li>
</ul>

<p>세 점이 [1, 4], [3, 4], [3, 10] 위치에 있을 때, [1, 10]에 점이 위치하면 직사각형이 됩니다.</p>

<ul>
  <li>입출력 예 #2</li>
</ul>

<p>세 점이 [1, 1], [2, 2], [1, 2] 위치에 있을 때, [2, 1]에 점이 위치하면 직사각형이 됩니다.</p>

<h2 id="풀이">풀이</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">Counter</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">v</span><span class="p">):</span>
    <span class="n">x_pts</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">v</span><span class="p">]</span>
    <span class="n">y_pts</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">v</span><span class="p">]</span>
    
    <span class="n">x_dict</span> <span class="o">=</span> <span class="p">{</span><span class="n">y</span><span class="p">:</span> <span class="n">x</span> <span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">Counter</span><span class="p">(</span><span class="n">x_pts</span><span class="p">).</span><span class="n">items</span><span class="p">()}</span>
    <span class="n">y_dict</span> <span class="o">=</span> <span class="p">{</span><span class="n">y</span><span class="p">:</span> <span class="n">x</span> <span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">Counter</span><span class="p">(</span><span class="n">y_pts</span><span class="p">).</span><span class="n">items</span><span class="p">()}</span>
    
    <span class="k">return</span> <span class="p">[</span><span class="n">x_dict</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">y_dict</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span>
</code></pre></div></div>
:ET