I"@<h2 id="문제-설명">문제 설명</h2>

<p>게임 캐릭터를 4가지 명령어를 통해 움직이려 합니다.<br />
명령어는 다음과 같습니다.</p>

<ul>
  <li>U: 위쪽으로 한 칸 가기</li>
  <li>D: 아래쪽으로 한 칸 가기</li>
  <li>R: 오른쪽으로 한 칸 가기</li>
  <li>L: 왼쪽으로 한 칸 가기</li>
</ul>

<p>캐릭터는 좌표평면의 (0, 0) 위치에서 시작합니다.<br />
좌표평면의 경계는 왼쪽 위(-5, 5), 왼쪽 아래(-5, -5), 오른쪽 위(5, 5), 오른쪽 아래(5, -5)로 이루어져 있습니다.</p>

<p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/ace0e7bc-9092-4b95-9bfb-3a55a2aa780e/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B51_qpp9l3.png" alt="그림1" /></p>

<p>예를 들어, “ULURRDLLU”로 명령했다면</p>

<p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/668c7458-e184-472d-9d32-f5d2acca759a/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B52_lezmdo.png" alt="그림2" /></p>

<ul>
  <li>1번 명령어부터 7번 명령어까지 다음과 같이 움직입니다.</li>
</ul>

<p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/08558e36-d667-4160-bfec-b754c78a7d85/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B53_sootjd.png" alt="그림3" /></p>

<ul>
  <li>8번 명령어부터 9번 명령어까지 다음과 같이 움직입니다.</li>
</ul>

<p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/a52af28e-5835-438b-9f40-5467ebf9bf03/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B54_hlpiej.png" alt="그림4" /></p>

<p>이때, 우리는 게임 캐릭터가 지나간 길 중 <strong>캐릭터가 처음 걸어본 길의 길이</strong>를 구하려고 합니다.<br />
예를 들어 위의 예시에서 게임 캐릭터가 움직인 길이는 9이지만, 캐릭터가 처음 걸어본 길의 길이는 7이 됩니다.<br />
(8, 9번 명령어에서 움직인 길은 2, 3번 명령어에서 이미 거쳐 간 길입니다.)<br />
단, 좌표평면의 경계를 넘어가는 명령어는 무시합니다.<br />
예를 들어, “LULLLLLLU”로 명령했다면</p>

<p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/f631f005-f8de-4392-a76c-a9ef64b6de08/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B55_nitjwj.png" alt="그림5" /></p>

<ul>
  <li>1번 명령어부터 6번 명령어대로 움직인 후, 7, 8번 명령어는 무시합니다. 다시 9번 명령어대로 움직입니다.</li>
</ul>

<p><img src="https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/35e62f0a-43c6-4142-bec6-6d28fbc57216/%E1%84%87%E1%85%A1%E1%86%BC%E1%84%86%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%86%AF%E1%84%8B%E1%85%B56_nzhumd.png" alt="그림6" /></p>

<p>이때 캐릭터가 처음 걸어본 길의 길이는 7이 됩니다.<br />
명령어가 매개변수 <code class="language-html highlighter-rouge">dirs</code>로 주어질 때, 게임 캐릭터가 처음 걸어본 길의 길이를 구하여 return 하는 <code class="language-html highlighter-rouge">solution</code> 함수를 완성해 주세요.</p>

<h2 id="제한사항">제한사항</h2>

<ul>
  <li><code class="language-html highlighter-rouge">dirs</code>는 string형으로 주어지며, ‘U’, ‘D’, ‘R’, ‘L’ 이외에 문자는 주어지지 않습니다.</li>
  <li><code class="language-html highlighter-rouge">dirs</code>의 길이는 500 이하의 자연수입니다</li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>dirs</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>“ULURRDLLU”</td>
      <td>7</td>
    </tr>
    <tr>
      <td>“LULLLLLLU”</td>
      <td>7</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>

<ul>
  <li>입출력 예 #1</li>
</ul>

<p>문제의 예시와 같습니다.</p>

<ul>
  <li>입출력 예 #2</li>
</ul>

<p>문제의 예시와 같습니다.</p>

<h2 id="풀이-1">풀이 1</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="c1"># --- 직관적인 풀이 ---
</span><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">dirs</span><span class="p">):</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="c1"># 시작 좌표를 0, 0으로 지정
</span>    <span class="n">check</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span> <span class="c1"># 좌표를 키로 사용하는 해시 생성
</span>    
    <span class="k">for</span> <span class="n">command</span> <span class="ow">in</span> <span class="n">dirs</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">command</span> <span class="o">==</span> <span class="s">'U'</span> <span class="ow">and</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">:</span> <span class="c1"># 위로
</span>            <span class="n">check</span><span class="p">[(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)]</span> <span class="o">=</span> <span class="bp">True</span> <span class="c1"># 현재 좌표, 이동할 좌표
</span>            <span class="n">y</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">'D'</span> <span class="ow">and</span> <span class="n">y</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">5</span><span class="p">:</span> <span class="c1"># 아래로
</span>            <span class="n">check</span><span class="p">[(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)]</span> <span class="o">=</span> <span class="bp">True</span> <span class="c1"># 이동할 좌표, 현재 좌표
</span>            <span class="n">y</span> <span class="o">-=</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">'R'</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">:</span> <span class="c1"># 오른쪽으로
</span>            <span class="n">check</span><span class="p">[(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">)]</span> <span class="o">=</span> <span class="bp">True</span> <span class="c1"># 현재 좌표, 이동할 좌표
</span>            <span class="n">x</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">'L'</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">5</span><span class="p">:</span> <span class="c1"># 왼쪽으로
</span>            <span class="n">check</span><span class="p">[(</span><span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)]</span> <span class="o">=</span> <span class="bp">True</span> <span class="c1"># 이동할 좌표, 현재 좌표.
</span>            <span class="n">x</span> <span class="o">-=</span> <span class="mi">1</span>

    <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="n">check</span><span class="p">)</span> <span class="c1"># 추가된 값들이 곧 방문 길이
</span></code></pre></div></div>

<h2 id="풀이-2">풀이 2</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="c1"># --- 무방향 그래프 풀이 ---
</span><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">dirs</span><span class="p">):</span>
    <span class="n">dir_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s">"R"</span><span class="p">:</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="s">"L"</span><span class="p">:</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="s">"U"</span><span class="p">:</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="s">"D"</span><span class="p">:</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)}</span>
    <span class="n">result_set</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">dirs</span><span class="p">:</span>
        <span class="n">dx</span><span class="p">,</span> <span class="n">dy</span> <span class="o">=</span> <span class="n">dir_dict</span><span class="p">[</span><span class="n">d</span><span class="p">]</span>
        <span class="n">nx</span><span class="p">,</span> <span class="n">ny</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="n">dy</span>

        <span class="k">if</span> <span class="o">-</span><span class="mi">5</span> <span class="o">&lt;=</span> <span class="n">nx</span> <span class="o">&lt;=</span> <span class="mi">5</span> <span class="ow">and</span> <span class="o">-</span><span class="mi">5</span> <span class="o">&lt;=</span> <span class="n">ny</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">:</span>
            <span class="n">result_set</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="nb">tuple</span><span class="p">(</span><span class="nb">sorted</span><span class="p">([(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="p">(</span><span class="n">nx</span><span class="p">,</span> <span class="n">ny</span><span class="p">)])))</span>
            <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">nx</span><span class="p">,</span> <span class="n">ny</span>
        
    <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="n">result_set</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="풀이-3">풀이 3</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="base16.solarized"><code><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">defaultdict</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">dirs</span><span class="p">):</span>
    <span class="n">dir_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s">"R"</span><span class="p">:</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="s">"L"</span><span class="p">:</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="s">"U"</span><span class="p">:</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="s">"D"</span><span class="p">:</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)}</span>
    <span class="n">result_dict</span> <span class="o">=</span> <span class="n">defaultdict</span><span class="p">(</span><span class="nb">set</span><span class="p">)</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>
    
    <span class="s">"""
    [result_dict 설명]
    1. 캐릭터의 시작점과 끝점을 기록한 사전
    2. 캐릭터가 처음 걸어본 길의 길이를 구해야 하므로 시작점(key)과 끝점(value), 끝점(key)과 시작점(value)을 한 번에 사전에 넣는다.
    3. 그리고 value의 자료 형식을 set으로 설정하면 중복된 점을 제거할 수 있다.
    """</span>
    <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">dirs</span><span class="p">:</span>
        <span class="n">dx</span><span class="p">,</span> <span class="n">dy</span> <span class="o">=</span> <span class="n">dir_dict</span><span class="p">[</span><span class="n">d</span><span class="p">]</span>
        <span class="n">nx</span><span class="p">,</span> <span class="n">ny</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="n">dy</span>
        
        <span class="k">if</span> <span class="o">-</span><span class="mi">5</span> <span class="o">&lt;=</span> <span class="n">nx</span> <span class="o">&lt;=</span> <span class="mi">5</span> <span class="ow">and</span> <span class="o">-</span><span class="mi">5</span> <span class="o">&lt;=</span> <span class="n">ny</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">:</span>
            <span class="n">result_dict</span><span class="p">[(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)].</span><span class="n">add</span><span class="p">((</span><span class="n">nx</span><span class="p">,</span> <span class="n">ny</span><span class="p">))</span>
            <span class="n">result_dict</span><span class="p">[(</span><span class="n">nx</span><span class="p">,</span> <span class="n">ny</span><span class="p">)].</span><span class="n">add</span><span class="p">((</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
            <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">nx</span><span class="p">,</span> <span class="n">ny</span>
    
    <span class="k">return</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">result_dict</span><span class="p">.</span><span class="n">values</span><span class="p">())</span> <span class="o">//</span> <span class="mi">2</span>
</code></pre></div></div>
:ET