I"<h2 id="문제-설명">문제 설명</h2>

<p>0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.</p>

<p>x의 모든 0을 제거합니다.<br />
x의 길이를 c라고 하면, x를 “c를 2진법으로 표현한 문자열”로 바꿉니다.<br />
예를 들어, x = “0111010”이라면, x에 이진 변환을 가하면 x = “0111010” -&gt; “1111” -&gt; “100” 이 됩니다.</p>

<p>0과 1로 이루어진 문자열 <code class="language-plaintext highlighter-rouge">s</code>가 매개변수로 주어집니다. s가 “1”이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 <code class="language-plaintext highlighter-rouge">solution</code> 함수를 완성해주세요.</p>

<h2 id="제한사항">제한사항</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">s</code>의 길이는 1 이상 150,000 이하입니다.</li>
  <li><code class="language-plaintext highlighter-rouge">s</code>에는 ‘1’이 최소 하나 이상 포함되어 있습니다.</li>
</ul>

<h2 id="입출력-예">입출력 예</h2>

<table>
  <thead>
    <tr>
      <th>s</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">"110010101001"</code></td>
      <td><code class="language-plaintext highlighter-rouge">[3, 8]</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">"01110"</code></td>
      <td><code class="language-plaintext highlighter-rouge">[3, 3]</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">"1111111"</code></td>
      <td><code class="language-plaintext highlighter-rouge">[4, 1]</code></td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>

<ul>
  <li>입출력 예 #1</li>
</ul>

<p>“110010101001”이 “1”이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</p>

<table>
  <thead>
    <tr>
      <th>회차</th>
      <th>이진 변환 이전</th>
      <th>제거할 0의 개수</th>
      <th>0 제거 후 길이</th>
      <th>이진 변환 결과</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>“110010101001”</td>
      <td>6</td>
      <td>6</td>
      <td>“110”</td>
    </tr>
    <tr>
      <td>2</td>
      <td>“110”</td>
      <td>1</td>
      <td>2</td>
      <td>“10”</td>
    </tr>
    <tr>
      <td>3</td>
      <td>“10”</td>
      <td>1</td>
      <td>1</td>
      <td>“1”</td>
    </tr>
  </tbody>
</table>

<p>3번의 이진 변환을 하는 동안 8개의 0을 제거했으므로, <code class="language-plaintext highlighter-rouge">[3, 8]</code>을 return 해야 합니다.</p>

<ul>
  <li>입출력 예 #2</li>
</ul>

<p>“01110”이 “1”이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</p>

<table>
  <thead>
    <tr>
      <th>회차</th>
      <th>이진 변환 이전</th>
      <th>제거할 0의 개수</th>
      <th>0 제거 후 길이</th>
      <th>이진 변환 결과</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>“01110”</td>
      <td>2</td>
      <td>3</td>
      <td>“11”</td>
    </tr>
    <tr>
      <td>2</td>
      <td>“11”</td>
      <td>0</td>
      <td>2</td>
      <td>“10”</td>
    </tr>
    <tr>
      <td>3</td>
      <td>“10”</td>
      <td>1</td>
      <td>1</td>
      <td>“1”</td>
    </tr>
  </tbody>
</table>

<p>3번의 이진 변환을 하는 동안 3개의 0을 제거했으므로, <code class="language-plaintext highlighter-rouge">[3, 3]</code>을 return 해야 합니다.</p>

<ul>
  <li>입출력 예 #3</li>
</ul>

<p>“1111111”이 “1”이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</p>

<table>
  <thead>
    <tr>
      <th>회차</th>
      <th>이진 변환 이전</th>
      <th>제거할 0의 개수</th>
      <th>0 제거 후 길이</th>
      <th>이진 변환 결과</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>“1111111”</td>
      <td>0</td>
      <td>7</td>
      <td>“111”</td>
    </tr>
    <tr>
      <td>2</td>
      <td>“111”</td>
      <td>0</td>
      <td>3</td>
      <td>“11”</td>
    </tr>
    <tr>
      <td>3</td>
      <td>“11”</td>
      <td>0</td>
      <td>2</td>
      <td>“10”</td>
    </tr>
    <tr>
      <td>4</td>
      <td>“10”</td>
      <td>1</td>
      <td>1</td>
      <td>“1”</td>
    </tr>
  </tbody>
</table>

<p>4번의 이진 변환을 하는 동안 1개의 0을 제거했으므로, <code class="language-plaintext highlighter-rouge">[4, 1]</code>을 return 해야 합니다.</p>

<h2 id="풀이">풀이</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">re</span> <span class="kn">import</span> <span class="n">sub</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
    <span class="n">zero_count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">bin_count</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">while</span> <span class="n">s</span> <span class="o">!=</span> <span class="s">"1"</span><span class="p">:</span>
        <span class="n">s_one</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="s">"0"</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>
        <span class="n">zero_count</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">s_one</span><span class="p">)</span>
        <span class="n">s</span> <span class="o">=</span> <span class="nb">bin</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">s_one</span><span class="p">))[</span><span class="mi">2</span><span class="p">:]</span>
        <span class="n">bin_count</span> <span class="o">+=</span> <span class="mi">1</span>
        
    <span class="k">return</span> <span class="p">[</span><span class="n">bin_count</span><span class="p">,</span> <span class="n">zero_count</span><span class="p">]</span>
</code></pre></div></div>
:ET